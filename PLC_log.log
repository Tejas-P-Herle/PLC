2018-11-04 13:08:51,433 - code_processor - INFO - BEFORE REGEX class Java {
  public static void main(String[] args) {
    print("Hello World", end="\n");
  }
}


2018-11-04 13:08:51,433 - code_processor - DEBUG - REGEX MATCH STR print\((["'][^"']*)(["'])\)
2018-11-04 13:08:51,433 - code_processor - DEBUG - REGEX MATCH STR print\(((["'])[^"']*)(\2),[\s\t]*end=""\)
2018-11-04 13:08:51,433 - code_processor - DEBUG - REGEX MATCH STR print\((["'].*)(["']),[\s\t]*end=["']([^,]*)["']\)
2018-11-04 13:08:51,433 - code_processor - DEBUG - MATCH ('print\\(($1["\'].*)($2["\']),[\\s\\t]*end=["\']($3[^,]*)["\']\\)', 'print\\((["\'].*)(["\']),[\\s\\t]*end=["\']([^,]*)["\']\\)', <re.Match object; span=(60, 90), match='print("Hello World", end="\\n")'>, 'System\\.out\\.println\\(($1["\'][^\\\\)]*)($3\\\\[a-z])($2["\'])\\)')
2018-11-04 13:08:51,433 - code_processor - DEBUG - regex str System\.out\.println\(\1($3\\[a-z])($2["'])\)
2018-11-04 13:08:51,433 - code_processor - DEBUG - regex str System\.out\.println\(\1\3($2["'])\)
2018-11-04 13:08:51,433 - code_processor - DEBUG - regex str System\.out\.println\(\1\3\2\)
2018-11-04 13:08:51,433 - code_processor - DEBUG - regex str System\.out\.println\(\1\3\2\)
2018-11-04 13:08:51,433 - code_processor - DEBUG - sub_params 'print\((["'].*)(["']),[\s\t]*end=["']([^,]*)["']\)' 'System.out.println(\1\3\2)' 'print("Hello World", end="\n")'
2018-11-04 13:08:51,433 - code_processor - DEBUG - SUB System.out.println("Hello World\n")
2018-11-04 13:08:51,433 - code_processor - DEBUG - REGEX MATCH STR (?<!int )([^\s=]+[\s\t]*=[\s\t]*[0-9]+)
2018-11-04 13:08:51,433 - code_processor - DEBUG - REGEX MATCH STR (?<!double )([^\s=]+[\s\t]*=[\s\t]*[0-9]+\.[0-9]+)
2018-11-04 13:08:51,433 - code_processor - DEBUG - REGEX MATCH STR (?<!["'])(.*)#
2018-11-04 13:08:51,433 - code_processor - DEBUG - REGEX MATCH STR ["']{3}([\S\s]*?)["']{3}
2018-11-04 13:08:51,433 - code_processor - DEBUG - REGEX MATCH STR print\(str\(([^)])\)[\s\t]*\+[\s\t]*str\(([^)])\)\)
2018-11-04 13:08:51,433 - code_processor - INFO - AFTER REGEX class Java {
  public static void main(String[] args) {
    System.out.println("Hello World\n");
  }
}


2018-11-04 13:08:51,448 - code_processor - INFO - BEFORE REGEX 
2018-11-04 13:08:51,448 - code_processor - INFO - AFTER REGEX 
2018-11-04 13:08:51,448 - code_processor - INFO - BEFORE REGEX 
2018-11-04 13:08:51,448 - code_processor - INFO - AFTER REGEX 
2018-11-04 13:08:51,448 - code_processor - INFO - BEFORE REGEX 

if __name__ == "__main__":
    Python().main()
2018-11-04 13:08:51,448 - code_processor - INFO - AFTER REGEX 

if __name__ == "__main__":
    Python().main()
2018-11-04 13:08:51,448 - code_processor - INFO - BEFORE REGEX class Java {
  public static void main(String[] args) {
    print("Hello World", end="\n");
  }
}


2018-11-04 13:08:51,448 - code_processor - DEBUG - REGEX MATCH STR print\((["'][^"']*)(["'])\)
2018-11-04 13:08:51,448 - code_processor - DEBUG - REGEX MATCH STR print\(((["'])[^"']*)(\2),[\s\t]*end=""\)
2018-11-04 13:08:51,448 - code_processor - DEBUG - REGEX MATCH STR print\((["'].*)(["']),[\s\t]*end=["']([^,]*)["']\)
2018-11-04 13:08:51,448 - code_processor - DEBUG - MATCH ('print\\(($1["\'].*)($2["\']),[\\s\\t]*end=["\']($3[^,]*)["\']\\)', 'print\\((["\'].*)(["\']),[\\s\\t]*end=["\']([^,]*)["\']\\)', <re.Match object; span=(60, 90), match='print("Hello World", end="\\n")'>, 'System\\.out\\.println\\(($1["\'][^\\\\)]*)($3\\\\[a-z])($2["\'])\\)')
2018-11-04 13:08:51,448 - code_processor - DEBUG - regex str System\.out\.println\(\1($3\\[a-z])($2["'])\)
2018-11-04 13:08:51,448 - code_processor - DEBUG - regex str System\.out\.println\(\1\3($2["'])\)
2018-11-04 13:08:51,448 - code_processor - DEBUG - regex str System\.out\.println\(\1\3\2\)
2018-11-04 13:08:51,448 - code_processor - DEBUG - regex str System\.out\.println\(\1\3\2\)
2018-11-04 13:08:51,448 - code_processor - DEBUG - sub_params 'print\((["'].*)(["']),[\s\t]*end=["']([^,]*)["']\)' 'System.out.println(\1\3\2)' 'print("Hello World", end="\n")'
2018-11-04 13:08:51,448 - code_processor - DEBUG - SUB System.out.println("Hello World\n")
2018-11-04 13:08:51,448 - code_processor - DEBUG - REGEX MATCH STR (?<!int )([^\s=]+[\s\t]*=[\s\t]*[0-9]+)
2018-11-04 13:08:51,448 - code_processor - DEBUG - REGEX MATCH STR (?<!double )([^\s=]+[\s\t]*=[\s\t]*[0-9]+\.[0-9]+)
2018-11-04 13:08:51,448 - code_processor - DEBUG - REGEX MATCH STR (?<!["'])(.*)#
2018-11-04 13:08:51,448 - code_processor - DEBUG - REGEX MATCH STR ["']{3}([\S\s]*?)["']{3}
2018-11-04 13:08:51,448 - code_processor - DEBUG - REGEX MATCH STR print\(str\(([^)])\)[\s\t]*\+[\s\t]*str\(([^)])\)\)
2018-11-04 13:08:51,448 - code_processor - INFO - AFTER REGEX class Java {
  public static void main(String[] args) {
    System.out.println("Hello World\n");
  }
}


2018-11-04 13:08:51,463 - code_processor - INFO - BEFORE REGEX class Temp_Outfile {
  public static void main(String[] args) {
    print("Hello World");
  }
}


2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR print\((["'][^"']*)(["'])\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - MATCH ('print\\(($1["\'][^"\']*)($2["\'])\\)', 'print\\((["\'][^"\']*)(["\'])\\)', <re.Match object; span=(68, 88), match='print("Hello World")'>, 'System\\.out\\.println\\(($1["\'][^\\\\]*)\\\\n($2["\'])\\)')
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n($2["'])\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n\2\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n\2\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - sub_params 'print\((["'][^"']*)(["'])\)' 'System.out.println(\1\\n\2)' 'print("Hello World")'
2018-11-04 13:08:51,463 - code_processor - DEBUG - SUB System.out.println("Hello World\n")
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR print\(((["'])[^"']*)(\2),[\s\t]*end=""\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR print\((["'].*)(["']),[\s\t]*end=["']([^,]*)["']\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR (?<!int )([^\s=]+[\s\t]*=[\s\t]*[0-9]+)
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR (?<!double )([^\s=]+[\s\t]*=[\s\t]*[0-9]+\.[0-9]+)
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR (?<!["'])(.*)#
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR ["']{3}([\S\s]*?)["']{3}
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR print\(str\(([^)])\)[\s\t]*\+[\s\t]*str\(([^)])\)\)
2018-11-04 13:08:51,463 - code_processor - INFO - AFTER REGEX class Temp_Outfile {
  public static void main(String[] args) {
    System.out.println("Hello World\n");
  }
}


2018-11-04 13:08:51,463 - code_processor - INFO - BEFORE REGEX class Temp_Outfile {
  public static void main(String[] args) {
    print("Hello World 2", end="");
  }
}


2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR print\((["'][^"']*)(["'])\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR print\(((["'])[^"']*)(\2),[\s\t]*end=""\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - MATCH ('print\\(($1(["\'])[^"\']*)($2\\2),[\\s\\t]*end=""\\)', 'print\\(((["\'])[^"\']*)(\\2),[\\s\\t]*end=""\\)', <re.Match object; span=(68, 98), match='print("Hello World 2", end="")'>, 'System\\.out\\.println\\(($1(["\'])[^"\']*)($2\\2)\\)')
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str System\.out\.println\(\1($2\2)\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str System\.out\.println\(\1\2\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str System\.out\.println\(\1\2\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - sub_params 'print\(((["'])[^"']*)(\2),[\s\t]*end=""\)' 'System.out.println(\1\2)' 'print("Hello World 2", end="")'
2018-11-04 13:08:51,463 - code_processor - DEBUG - SUB System.out.println("Hello World 2")
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR print\((["'].*)(["']),[\s\t]*end=["']([^,]*)["']\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR (?<!int )([^\s=]+[\s\t]*=[\s\t]*[0-9]+)
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR (?<!double )([^\s=]+[\s\t]*=[\s\t]*[0-9]+\.[0-9]+)
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR (?<!["'])(.*)#
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR ["']{3}([\S\s]*?)["']{3}
2018-11-04 13:08:51,463 - code_processor - DEBUG - REGEX MATCH STR print\(str\(([^)])\)[\s\t]*\+[\s\t]*str\(([^)])\)\)
2018-11-04 13:08:51,463 - code_processor - INFO - AFTER REGEX class Temp_Outfile {
  public static void main(String[] args) {
    System.out.println("Hello World 2");
  }
}


2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str System.out.println\(\1\\n($2[\"'])\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str System.out.println\(\1\\n\2\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str System.out.println\(\1\\n\2\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - sub_params 'print\(([\"'][^\"']*)([\"'])\)' 'System.out.println(\1\\n\2)' '    print('Hello World')'
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str print\(\1($2[\"'])\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str print\(\1\2\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str print\(\1\2\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - sub_params 'System.out.println\(([\"'][^\\]*)\\n([\"'])\)' 'print(\1\2)' '    System.out.println('Hello World\n')'
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str System\.out\.println\(\1($2\2)\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str System\.out\.println\(\1\2\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str System\.out\.println\(\1\2\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - sub_params 'print\((([\"'])[^\"']*)(\2), end=([\"'])\4\)' 'System.out.println(\1\2)' '    print('Hello World', end="")'
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str print\(\1($2\2), end=([\"'])\4\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str print\(\1\2, end=([\"'])\4\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - regex str print\(\1\2, end=([\"'])\4\)
2018-11-04 13:08:51,463 - code_processor - DEBUG - sub_params 'System\.out\.println\((([\"'])[^\"']*)(\2)\)' 'print(\1\2, end=([\"'])\4)' '    System.out.println('Hello World')'
2018-11-04 13:08:51,510 - code_processor - INFO - BEFORE REGEX class Python_1_Outfile {
  public static void main(String[] args) {
    print("Hello World");
  }
}

2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR print\((["'][^"']*)(["'])\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - MATCH ('print\\(($1["\'][^"\']*)($2["\'])\\)', 'print\\((["\'][^"\']*)(["\'])\\)', <re.Match object; span=(72, 92), match='print("Hello World")'>, 'System\\.out\\.println\\(($1["\'][^\\\\]*)\\\\n($2["\'])\\)')
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n($2["'])\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n\2\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n\2\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - sub_params 'print\((["'][^"']*)(["'])\)' 'System.out.println(\1\\n\2)' 'print("Hello World")'
2018-11-04 13:08:51,510 - code_processor - DEBUG - SUB System.out.println("Hello World\n")
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR print\(((["'])[^"']*)(\2),[\s\t]*end=""\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR print\((["'].*)(["']),[\s\t]*end=["']([^,]*)["']\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR (?<!int )([^\s=]+[\s\t]*=[\s\t]*[0-9]+)
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR (?<!double )([^\s=]+[\s\t]*=[\s\t]*[0-9]+\.[0-9]+)
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR (?<!["'])(.*)#
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR ["']{3}([\S\s]*?)["']{3}
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR print\(str\(([^)])\)[\s\t]*\+[\s\t]*str\(([^)])\)\)
2018-11-04 13:08:51,510 - code_processor - INFO - AFTER REGEX class Python_1_Outfile {
  public static void main(String[] args) {
    System.out.println("Hello World\n");
  }
}

2018-11-04 13:08:51,510 - code_processor - INFO - BEFORE REGEX class Python_2_Outfile {
  public static void main(String[] args) {
    value = 1;
    if (value == 0) {
      print("False");
    }
    else if (value == 1) {
      print("True");
    }
    else {
      print("Undefined");
    }
  }
}
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR print\((["'][^"']*)(["'])\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - MATCH ('print\\(($1["\'][^"\']*)($2["\'])\\)', 'print\\((["\'][^"\']*)(["\'])\\)', <re.Match object; span=(111, 125), match='print("False")'>, 'System\\.out\\.println\\(($1["\'][^\\\\]*)\\\\n($2["\'])\\)')
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n($2["'])\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n\2\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n\2\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - sub_params 'print\((["'][^"']*)(["'])\)' 'System.out.println(\1\\n\2)' 'print("False")'
2018-11-04 13:08:51,510 - code_processor - DEBUG - SUB System.out.println("False\n")
2018-11-04 13:08:51,510 - code_processor - DEBUG - MATCH ('print\\(($1["\'][^"\']*)($2["\'])\\)', 'print\\((["\'][^"\']*)(["\'])\\)', <re.Match object; span=(166, 179), match='print("True")'>, 'System\\.out\\.println\\(($1["\'][^\\\\]*)\\\\n($2["\'])\\)')
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n($2["'])\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n\2\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n\2\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - sub_params 'print\((["'][^"']*)(["'])\)' 'System.out.println(\1\\n\2)' 'print("True")'
2018-11-04 13:08:51,510 - code_processor - DEBUG - SUB System.out.println("True\n")
2018-11-04 13:08:51,510 - code_processor - DEBUG - MATCH ('print\\(($1["\'][^"\']*)($2["\'])\\)', 'print\\((["\'][^"\']*)(["\'])\\)', <re.Match object; span=(204, 222), match='print("Undefined")'>, 'System\\.out\\.println\\(($1["\'][^\\\\]*)\\\\n($2["\'])\\)')
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n($2["'])\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n\2\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str System\.out\.println\(\1\\n\2\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - sub_params 'print\((["'][^"']*)(["'])\)' 'System.out.println(\1\\n\2)' 'print("Undefined")'
2018-11-04 13:08:51,510 - code_processor - DEBUG - SUB System.out.println("Undefined\n")
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR print\(((["'])[^"']*)(\2),[\s\t]*end=""\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR print\((["'].*)(["']),[\s\t]*end=["']([^,]*)["']\)
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR (?<!int )([^\s=]+[\s\t]*=[\s\t]*[0-9]+)
2018-11-04 13:08:51,510 - code_processor - DEBUG - MATCH ('(?<!int )($1[^\\s=]+[\\s\\t]*=[\\s\\t]*[0-9]+)', '(?<!int )([^\\s=]+[\\s\\t]*=[\\s\\t]*[0-9]+)', <re.Match object; span=(72, 81), match='value = 1'>, 'int ($1[^\\s=]+ = [0-9]+)')
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str int \1
2018-11-04 13:08:51,510 - code_processor - DEBUG - regex str int \1
2018-11-04 13:08:51,510 - code_processor - DEBUG - sub_params '(?<!int )([^\s=]+[\s\t]*=[\s\t]*[0-9]+)' 'int \1' 'value = 1'
2018-11-04 13:08:51,510 - code_processor - DEBUG - SUB int value = 1
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR (?<!double )([^\s=]+[\s\t]*=[\s\t]*[0-9]+\.[0-9]+)
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR (?<!["'])(.*)#
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR ["']{3}([\S\s]*?)["']{3}
2018-11-04 13:08:51,510 - code_processor - DEBUG - REGEX MATCH STR print\(str\(([^)])\)[\s\t]*\+[\s\t]*str\(([^)])\)\)
2018-11-04 13:08:51,510 - code_processor - INFO - AFTER REGEX class Python_2_Outfile {
  public static void main(String[] args) {
    int value = 1;
    if (value == 0) {
      System.out.println("False\n");
    }
    else if (value == 1) {
      System.out.println("True\n");
    }
    else {
      System.out.println("Undefined\n");
    }
  }
}
2018-11-04 13:08:51,526 - code_processor - INFO - BEFORE REGEX class Python_3_Outfile {
  public static void main(String[] args) {
    j = 0;
    for (int i = 0; i < 10; i++) {
      j += i;
      print(str(i) + str(j));
    }
  }
}
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR print\((["'][^"']*)(["'])\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR print\(((["'])[^"']*)(\2),[\s\t]*end=""\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR print\((["'].*)(["']),[\s\t]*end=["']([^,]*)["']\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR (?<!int )([^\s=]+[\s\t]*=[\s\t]*[0-9]+)
2018-11-04 13:08:51,526 - code_processor - DEBUG - MATCH ('(?<!int )($1[^\\s=]+[\\s\\t]*=[\\s\\t]*[0-9]+)', '(?<!int )([^\\s=]+[\\s\\t]*=[\\s\\t]*[0-9]+)', <re.Match object; span=(72, 77), match='j = 0'>, 'int ($1[^\\s=]+ = [0-9]+)')
2018-11-04 13:08:51,526 - code_processor - DEBUG - regex str int \1
2018-11-04 13:08:51,526 - code_processor - DEBUG - regex str int \1
2018-11-04 13:08:51,526 - code_processor - DEBUG - sub_params '(?<!int )([^\s=]+[\s\t]*=[\s\t]*[0-9]+)' 'int \1' 'j = 0'
2018-11-04 13:08:51,526 - code_processor - DEBUG - SUB int j = 0
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR (?<!double )([^\s=]+[\s\t]*=[\s\t]*[0-9]+\.[0-9]+)
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR (?<!["'])(.*)#
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR ["']{3}([\S\s]*?)["']{3}
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR print\(str\(([^)])\)[\s\t]*\+[\s\t]*str\(([^)])\)\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - MATCH ('print\\(str\\(($1[^)])\\)[\\s\\t]*\\+[\\s\\t]*str\\(($2[^)])\\)\\)', 'print\\(str\\(([^)])\\)[\\s\\t]*\\+[\\s\\t]*str\\(([^)])\\)\\)', <re.Match object; span=(138, 160), match='print(str(i) + str(j))'>, 'System\\.out\\.println\\(($1[^.])\\.toString\\(\\) \\+ ($2[^.])\\.toString\\(\\)\\)')
2018-11-04 13:08:51,526 - code_processor - DEBUG - regex str System\.out\.println\(\1\.toString\(\) \+ ($2[^.])\.toString\(\)\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - regex str System\.out\.println\(\1\.toString\(\) \+ \2\.toString\(\)\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - regex str System\.out\.println\(\1\.toString\(\) \+ \2\.toString\(\)\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - sub_params 'print\(str\(([^)])\)[\s\t]*\+[\s\t]*str\(([^)])\)\)' 'System.out.println(\1.toString() + \2.toString())' 'print(str(i) + str(j))'
2018-11-04 13:08:51,526 - code_processor - DEBUG - SUB System.out.println(i.toString() + j.toString())
2018-11-04 13:08:51,526 - code_processor - INFO - AFTER REGEX class Python_3_Outfile {
  public static void main(String[] args) {
    int j = 0;
    for (int i = 0; i < 10; i++) {
      j += i;
      System.out.println(i.toString() + j.toString());
    }
  }
}
2018-11-04 13:08:51,526 - code_processor - INFO - BEFORE REGEX class Python_4_Outfile {
  public static void main(String[] args) {
    print("Ends with '!'", end="!");
  }
}
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR print\((["'][^"']*)(["'])\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR print\(((["'])[^"']*)(\2),[\s\t]*end=""\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR print\((["'].*)(["']),[\s\t]*end=["']([^,]*)["']\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - MATCH ('print\\(($1["\'].*)($2["\']),[\\s\\t]*end=["\']($3[^,]*)["\']\\)', 'print\\((["\'].*)(["\']),[\\s\\t]*end=["\']([^,]*)["\']\\)', <re.Match object; span=(72, 103), match='print("Ends with \'!\'", end="!")'>, 'System\\.out\\.println\\(($1["\'][^\\\\)]*)($3\\\\[a-z])($2["\'])\\)')
2018-11-04 13:08:51,526 - code_processor - DEBUG - regex str System\.out\.println\(\1($3\\[a-z])($2["'])\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - regex str System\.out\.println\(\1\3($2["'])\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - regex str System\.out\.println\(\1\3\2\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - regex str System\.out\.println\(\1\3\2\)
2018-11-04 13:08:51,526 - code_processor - DEBUG - sub_params 'print\((["'].*)(["']),[\s\t]*end=["']([^,]*)["']\)' 'System.out.println(\1\3\2)' 'print("Ends with '!'", end="!")'
2018-11-04 13:08:51,526 - code_processor - DEBUG - SUB System.out.println("Ends with '!'!")
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR (?<!int )([^\s=]+[\s\t]*=[\s\t]*[0-9]+)
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR (?<!double )([^\s=]+[\s\t]*=[\s\t]*[0-9]+\.[0-9]+)
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR (?<!["'])(.*)#
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR ["']{3}([\S\s]*?)["']{3}
2018-11-04 13:08:51,526 - code_processor - DEBUG - REGEX MATCH STR print\(str\(([^)])\)[\s\t]*\+[\s\t]*str\(([^)])\)\)
2018-11-04 13:08:51,526 - code_processor - INFO - AFTER REGEX class Python_4_Outfile {
  public static void main(String[] args) {
    System.out.println("Ends with '!'!");
  }
}
2018-11-04 13:08:51,542 - langauges_java - DEBUG - ERROR_2 public final MasterClass [] []
2018-11-04 13:08:51,542 - langauges_java - DEBUG - ERROR_2 private static ChildClass ['MasterClass'] ['ParentIntr']
2018-11-04 13:08:51,542 - langauges_java - DEBUG - ERROR_2  SubClass ['MasterClass'] ['ParentIntr', 'ChildIntr']
