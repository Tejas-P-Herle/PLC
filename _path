"""
Python Language Converter(PLC)
Converts Source Code from language A to B
"""
from language import Language
from error import Error
import logging
from file_path import FilePath
from language import Language

logging.basicConfig(filename="PLC_log.log", level=logging.DEBUG)


def main():

    # Create user input string template
    input_msg = "{} or q to abort: "

    # Create input messages
    input_file_path_msg = input_msg.format("Path to Program File")
    input_language_msg = input_msg.format("To Language")
    input_file_name_msg = input_msg.format("Output File Name")
    
    # Get Input Program File Path
    file_path = input(input_file_path_msg)
    
    # Get To Conversion Language
    to_language = input(input_language_msg)
    
    # Get Output file name
    output_file_name = input(input_file_path_msg)

    logging.debug("file_path " + file_path)
    logging.debug("to_language " + to_language)
    logging.debug("output_file_name " + output_file_name)

    #
    # Validate Inputs
    #

    validate_methods = [
        (FilePath.validate_file_path, file_path, input_file_path_msg),
        (Language.validate, to_language, input_language_msg),
        (FilePath.validate_file_name, input_file_name_msg)
    ]

    # Validate user input
    for function, var, input_str in validate_methods:
        
        # Run validation
        error = function(var)
    
        # If error encountered, print error and exit
        while error: 
            Error.parse(error, user_input=True)
            var = input(input_str)
            error = function(var)

    #
    # Start Conversion
    #

    # Recognize Language
    from_language = Language.recognize(file_path)
    print(from_language, "->", to_language)
    return 0


if __name__ == "__main__":
    main()
